
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADDI AND COMMA END LINE_NUMBER LPAREN LW NOP NUMBER OR REGISTER REGISTER_OVERFLOW RPAREN SHOW SUB SWstatement : expressionexpression : LINE_NUMBER ADD REGISTER REGISTER REGISTER\n                | LINE_NUMBER SUB REGISTER REGISTER REGISTER\n                | LINE_NUMBER OR REGISTER REGISTER REGISTER\n                | LINE_NUMBER AND REGISTER REGISTER REGISTER\n                | LINE_NUMBER ADDI REGISTER REGISTER NUMBER\n                | LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN\n                | LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN\n                | LINE_NUMBER NOP\n                | LINE_NUMBER END\n                | LINE_NUMBER SHOW'
    
_lr_action_items = {'LINE_NUMBER':([0,],[3,]),'$end':([1,2,11,12,13,28,29,30,31,32,37,38,],[0,-1,-9,-10,-11,-2,-3,-4,-5,-6,-7,-8,]),'ADD':([3,],[4,]),'SUB':([3,],[5,]),'OR':([3,],[6,]),'AND':([3,],[7,]),'ADDI':([3,],[8,]),'LW':([3,],[9,]),'SW':([3,],[10,]),'NOP':([3,],[11,]),'END':([3,],[12,]),'SHOW':([3,],[13,]),'REGISTER':([4,5,6,7,8,9,10,14,15,16,17,18,21,22,23,24,33,34,],[14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,35,36,]),'NUMBER':([19,20,25,],[26,27,32,]),'LPAREN':([26,27,],[33,34,]),'RPAREN':([35,36,],[37,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','mips_yacc.py',8),
  ('expression -> LINE_NUMBER ADD REGISTER REGISTER REGISTER','expression',5,'p_expression','mips_yacc.py',12),
  ('expression -> LINE_NUMBER SUB REGISTER REGISTER REGISTER','expression',5,'p_expression','mips_yacc.py',13),
  ('expression -> LINE_NUMBER OR REGISTER REGISTER REGISTER','expression',5,'p_expression','mips_yacc.py',14),
  ('expression -> LINE_NUMBER AND REGISTER REGISTER REGISTER','expression',5,'p_expression','mips_yacc.py',15),
  ('expression -> LINE_NUMBER ADDI REGISTER REGISTER NUMBER','expression',5,'p_expression','mips_yacc.py',16),
  ('expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN','expression',7,'p_expression','mips_yacc.py',17),
  ('expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN','expression',7,'p_expression','mips_yacc.py',18),
  ('expression -> LINE_NUMBER NOP','expression',2,'p_expression','mips_yacc.py',19),
  ('expression -> LINE_NUMBER END','expression',2,'p_expression','mips_yacc.py',20),
  ('expression -> LINE_NUMBER SHOW','expression',2,'p_expression','mips_yacc.py',21),
]
