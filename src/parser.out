Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    REGISTER_OVERFLOW

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> LINE_NUMBER ADD REGISTER REGISTER REGISTER
Rule 3     expression -> LINE_NUMBER SUB REGISTER REGISTER REGISTER
Rule 4     expression -> LINE_NUMBER OR REGISTER REGISTER REGISTER
Rule 5     expression -> LINE_NUMBER AND REGISTER REGISTER REGISTER
Rule 6     expression -> LINE_NUMBER ADDI REGISTER REGISTER NUMBER
Rule 7     expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN
Rule 8     expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN
Rule 9     expression -> LINE_NUMBER NOP
Rule 10    expression -> LINE_NUMBER END
Rule 11    expression -> LINE_NUMBER SHOW

Terminals, with rules where they appear

ADD                  : 2
ADDI                 : 6
AND                  : 5
COMMA                : 
END                  : 10
LINE_NUMBER          : 2 3 4 5 6 7 8 9 10 11
LPAREN               : 7 8
LW                   : 7
NOP                  : 9
NUMBER               : 6 7 8
OR                   : 4
REGISTER             : 2 2 2 3 3 3 4 4 4 5 5 5 6 6 7 7 8 8
REGISTER_OVERFLOW    : 
RPAREN               : 7 8
SHOW                 : 11
SUB                  : 3
SW                   : 8
error                : 

Nonterminals, with rules where they appear

expression           : 1
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . LINE_NUMBER ADD REGISTER REGISTER REGISTER
    (3) expression -> . LINE_NUMBER SUB REGISTER REGISTER REGISTER
    (4) expression -> . LINE_NUMBER OR REGISTER REGISTER REGISTER
    (5) expression -> . LINE_NUMBER AND REGISTER REGISTER REGISTER
    (6) expression -> . LINE_NUMBER ADDI REGISTER REGISTER NUMBER
    (7) expression -> . LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN
    (8) expression -> . LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN
    (9) expression -> . LINE_NUMBER NOP
    (10) expression -> . LINE_NUMBER END
    (11) expression -> . LINE_NUMBER SHOW

    LINE_NUMBER     shift and go to state 3

    statement                      shift and go to state 1
    expression                     shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .

    $end            reduce using rule 1 (statement -> expression .)


state 3

    (2) expression -> LINE_NUMBER . ADD REGISTER REGISTER REGISTER
    (3) expression -> LINE_NUMBER . SUB REGISTER REGISTER REGISTER
    (4) expression -> LINE_NUMBER . OR REGISTER REGISTER REGISTER
    (5) expression -> LINE_NUMBER . AND REGISTER REGISTER REGISTER
    (6) expression -> LINE_NUMBER . ADDI REGISTER REGISTER NUMBER
    (7) expression -> LINE_NUMBER . LW REGISTER NUMBER LPAREN REGISTER RPAREN
    (8) expression -> LINE_NUMBER . SW REGISTER NUMBER LPAREN REGISTER RPAREN
    (9) expression -> LINE_NUMBER . NOP
    (10) expression -> LINE_NUMBER . END
    (11) expression -> LINE_NUMBER . SHOW

    ADD             shift and go to state 4
    SUB             shift and go to state 5
    OR              shift and go to state 6
    AND             shift and go to state 7
    ADDI            shift and go to state 8
    LW              shift and go to state 9
    SW              shift and go to state 10
    NOP             shift and go to state 11
    END             shift and go to state 12
    SHOW            shift and go to state 13


state 4

    (2) expression -> LINE_NUMBER ADD . REGISTER REGISTER REGISTER

    REGISTER        shift and go to state 14


state 5

    (3) expression -> LINE_NUMBER SUB . REGISTER REGISTER REGISTER

    REGISTER        shift and go to state 15


state 6

    (4) expression -> LINE_NUMBER OR . REGISTER REGISTER REGISTER

    REGISTER        shift and go to state 16


state 7

    (5) expression -> LINE_NUMBER AND . REGISTER REGISTER REGISTER

    REGISTER        shift and go to state 17


state 8

    (6) expression -> LINE_NUMBER ADDI . REGISTER REGISTER NUMBER

    REGISTER        shift and go to state 18


state 9

    (7) expression -> LINE_NUMBER LW . REGISTER NUMBER LPAREN REGISTER RPAREN

    REGISTER        shift and go to state 19


state 10

    (8) expression -> LINE_NUMBER SW . REGISTER NUMBER LPAREN REGISTER RPAREN

    REGISTER        shift and go to state 20


state 11

    (9) expression -> LINE_NUMBER NOP .

    $end            reduce using rule 9 (expression -> LINE_NUMBER NOP .)


state 12

    (10) expression -> LINE_NUMBER END .

    $end            reduce using rule 10 (expression -> LINE_NUMBER END .)


state 13

    (11) expression -> LINE_NUMBER SHOW .

    $end            reduce using rule 11 (expression -> LINE_NUMBER SHOW .)


state 14

    (2) expression -> LINE_NUMBER ADD REGISTER . REGISTER REGISTER

    REGISTER        shift and go to state 21


state 15

    (3) expression -> LINE_NUMBER SUB REGISTER . REGISTER REGISTER

    REGISTER        shift and go to state 22


state 16

    (4) expression -> LINE_NUMBER OR REGISTER . REGISTER REGISTER

    REGISTER        shift and go to state 23


state 17

    (5) expression -> LINE_NUMBER AND REGISTER . REGISTER REGISTER

    REGISTER        shift and go to state 24


state 18

    (6) expression -> LINE_NUMBER ADDI REGISTER . REGISTER NUMBER

    REGISTER        shift and go to state 25


state 19

    (7) expression -> LINE_NUMBER LW REGISTER . NUMBER LPAREN REGISTER RPAREN

    NUMBER          shift and go to state 26


state 20

    (8) expression -> LINE_NUMBER SW REGISTER . NUMBER LPAREN REGISTER RPAREN

    NUMBER          shift and go to state 27


state 21

    (2) expression -> LINE_NUMBER ADD REGISTER REGISTER . REGISTER

    REGISTER        shift and go to state 28


state 22

    (3) expression -> LINE_NUMBER SUB REGISTER REGISTER . REGISTER

    REGISTER        shift and go to state 29


state 23

    (4) expression -> LINE_NUMBER OR REGISTER REGISTER . REGISTER

    REGISTER        shift and go to state 30


state 24

    (5) expression -> LINE_NUMBER AND REGISTER REGISTER . REGISTER

    REGISTER        shift and go to state 31


state 25

    (6) expression -> LINE_NUMBER ADDI REGISTER REGISTER . NUMBER

    NUMBER          shift and go to state 32


state 26

    (7) expression -> LINE_NUMBER LW REGISTER NUMBER . LPAREN REGISTER RPAREN

    LPAREN          shift and go to state 33


state 27

    (8) expression -> LINE_NUMBER SW REGISTER NUMBER . LPAREN REGISTER RPAREN

    LPAREN          shift and go to state 34


state 28

    (2) expression -> LINE_NUMBER ADD REGISTER REGISTER REGISTER .

    $end            reduce using rule 2 (expression -> LINE_NUMBER ADD REGISTER REGISTER REGISTER .)


state 29

    (3) expression -> LINE_NUMBER SUB REGISTER REGISTER REGISTER .

    $end            reduce using rule 3 (expression -> LINE_NUMBER SUB REGISTER REGISTER REGISTER .)


state 30

    (4) expression -> LINE_NUMBER OR REGISTER REGISTER REGISTER .

    $end            reduce using rule 4 (expression -> LINE_NUMBER OR REGISTER REGISTER REGISTER .)


state 31

    (5) expression -> LINE_NUMBER AND REGISTER REGISTER REGISTER .

    $end            reduce using rule 5 (expression -> LINE_NUMBER AND REGISTER REGISTER REGISTER .)


state 32

    (6) expression -> LINE_NUMBER ADDI REGISTER REGISTER NUMBER .

    $end            reduce using rule 6 (expression -> LINE_NUMBER ADDI REGISTER REGISTER NUMBER .)


state 33

    (7) expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN . REGISTER RPAREN

    REGISTER        shift and go to state 35


state 34

    (8) expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN . REGISTER RPAREN

    REGISTER        shift and go to state 36


state 35

    (7) expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER . RPAREN

    RPAREN          shift and go to state 37


state 36

    (8) expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER . RPAREN

    RPAREN          shift and go to state 38


state 37

    (7) expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN .

    $end            reduce using rule 7 (expression -> LINE_NUMBER LW REGISTER NUMBER LPAREN REGISTER RPAREN .)


state 38

    (8) expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN .

    $end            reduce using rule 8 (expression -> LINE_NUMBER SW REGISTER NUMBER LPAREN REGISTER RPAREN .)

